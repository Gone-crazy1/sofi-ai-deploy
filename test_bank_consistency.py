#!/usr/bin/env python3
"""
Test bank code consistency across all files after fixes
"""

import os
import re

print("üß™ TESTING BANK CODE CONSISTENCY")
print("=" * 50)

# Files to check
files_to_check = [
    "utils/bank_api.py",
    "functions/transfer_functions.py", 
    "paystack/paystack_service.py",
    "sofi_money_functions.py"
]

# Expected correct codes
expected_codes = {
    "opay": "999992",
    "palmpay": "999991", 
    "moniepoint": "50515"
}

print("\\n1Ô∏è‚É£ CHECKING BANK CODES IN ALL FILES...")

all_consistent = True

for file_path in files_to_check:
    if not os.path.exists(file_path):
        print(f"‚ùå {file_path}: Not found")
        continue
        
    print(f"\\nüìÅ {file_path}:")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Check each bank
        for bank, expected_code in expected_codes.items():
            # Find all occurrences of this bank
            patterns = [
                f'"{bank}":\\s*"([0-9]+)"',
                f"'{bank}':\\s*'([0-9]+)'",
                f'"{bank}"\\s*:\\s*"([0-9]+)"'
            ]
            
            found_codes = []
            for pattern in patterns:
                matches = re.findall(pattern, content, re.IGNORECASE)
                found_codes.extend(matches)
            
            # Remove duplicates
            unique_codes = list(set(found_codes))
            
            if not unique_codes:
                print(f"  ‚ö™ {bank}: Not found")
            elif len(unique_codes) == 1 and unique_codes[0] == expected_code:
                print(f"  ‚úÖ {bank}: {unique_codes[0]} (correct)")
            elif len(unique_codes) == 1:
                print(f"  ‚ùå {bank}: {unique_codes[0]} (expected {expected_code})")
                all_consistent = False
            else:
                print(f"  ‚ö†Ô∏è  {bank}: Multiple codes found: {unique_codes}")
                all_consistent = False
                
    except Exception as e:
        print(f"  ‚ùå Error reading file: {e}")
        all_consistent = False

print("\\n" + "=" * 50)

if all_consistent:
    print("‚úÖ ALL BANK CODES ARE NOW CONSISTENT!")
    print("\\nüéØ FIXES APPLIED:")
    print("‚Ä¢ OPay: 999992 (standardized)")
    print("‚Ä¢ PalmPay: 999991 (standardized)")  
    print("‚Ä¢ Moniepoint: 50515 (already correct)")
    
    print("\\nüöÄ EXPECTED RESULTS:")
    print("‚Ä¢ Moniepoint will work consistently")
    print("‚Ä¢ No more 'bank not supported' errors")
    print("‚Ä¢ All fintech banks work reliably")
    print("‚Ä¢ Transfer verification will be consistent")
    
    print("\\nüí° TEST IT:")
    print("1. Try sending money to a Moniepoint account")
    print("2. Should work every time now")
    print("3. No more random 'not supported' messages")
    
else:
    print("‚ùå SOME INCONSISTENCIES STILL EXIST")
    print("\\nüîß MANUAL FIXES NEEDED:")
    print("‚Ä¢ Check the files above with ‚ùå or ‚ö†Ô∏è")
    print("‚Ä¢ Update any incorrect codes manually")
    print("‚Ä¢ Run this test again to verify")

print("\\nüìã SUMMARY:")
print(f"‚Ä¢ Files checked: {len(files_to_check)}")
print(f"‚Ä¢ Banks verified: {', '.join(expected_codes.keys())}")
print(f"‚Ä¢ Status: {'‚úÖ CONSISTENT' if all_consistent else '‚ùå NEEDS FIXES'}")
