-- =======================================================
-- SOFI AI - SIMPLE SUPABASE SCHEMA FOR PAYSTACK
-- =======================================================
-- Run these SQL commands in your Supabase SQL Editor

-- 1. Drop existing tables if they exist (optional)
-- =======================================================
DROP TABLE IF EXISTS paystack_webhook_logs CASCADE;
DROP TABLE IF EXISTS user_settings CASCADE;
DROP TABLE IF EXISTS beneficiaries CASCADE;
DROP TABLE IF EXISTS transfer_recipients CASCADE;
DROP TABLE IF EXISTS bank_transactions CASCADE;
DROP TABLE IF EXISTS virtual_accounts CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- 2. USERS TABLE (Main user information)
-- =======================================================
CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    telegram_chat_id TEXT UNIQUE NOT NULL,
    phone_number TEXT,
    full_name TEXT,
    email TEXT,
    balance DECIMAL(15,2) DEFAULT 0.00,
    paystack_customer_code TEXT,
    is_verified BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    pin_hash TEXT,
    pin_attempts INTEGER DEFAULT 0,
    pin_locked_until TIMESTAMP,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 3. VIRTUAL ACCOUNTS TABLE (Paystack dedicated accounts)
-- =======================================================
CREATE TABLE virtual_accounts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    telegram_chat_id TEXT REFERENCES users(telegram_chat_id) ON DELETE CASCADE,
    account_number TEXT UNIQUE NOT NULL,
    account_name TEXT,
    bank_name TEXT,
    bank_code TEXT,
    paystack_customer_code TEXT,
    paystack_account_id TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 4. BANK TRANSACTIONS TABLE (All payment transactions)
-- =======================================================
CREATE TABLE bank_transactions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- telegram_chat_id
    transaction_type TEXT NOT NULL,
    amount DECIMAL(15,2) NOT NULL,
    reference TEXT UNIQUE,
    status TEXT DEFAULT 'pending',
    description TEXT,
    paystack_data JSONB,
    balance_before DECIMAL(15,2),
    balance_after DECIMAL(15,2),
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 5. TRANSFER RECIPIENTS TABLE (For outgoing transfers)
-- =======================================================
CREATE TABLE transfer_recipients (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- telegram_chat_id
    recipient_name TEXT NOT NULL,
    account_number TEXT NOT NULL,
    bank_code TEXT NOT NULL,
    bank_name TEXT,
    paystack_recipient_code TEXT UNIQUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 6. BENEFICIARIES TABLE (Saved recipients for users)
-- =======================================================
CREATE TABLE beneficiaries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- telegram_chat_id
    beneficiary_name TEXT NOT NULL,
    account_number TEXT NOT NULL,
    bank_code TEXT NOT NULL,
    bank_name TEXT NOT NULL,
    nickname TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 7. PAYSTACK WEBHOOKS LOG (For debugging webhook events)
-- =======================================================
CREATE TABLE paystack_webhook_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_type TEXT NOT NULL,
    reference TEXT,
    payload JSONB NOT NULL,
    signature TEXT,
    processed BOOLEAN DEFAULT FALSE,
    processing_result JSONB,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 8. USER SETTINGS TABLE (User preferences and configurations)
-- =======================================================
CREATE TABLE user_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT UNIQUE NOT NULL, -- telegram_chat_id
    transfer_limit_daily DECIMAL(15,2) DEFAULT 1000000.00, -- 1M NGN default
    transfer_limit_monthly DECIMAL(15,2) DEFAULT 10000000.00, -- 10M NGN default
    require_pin_for_transfers BOOLEAN DEFAULT TRUE,
    notifications_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =======================================================
-- BASIC INDEXES FOR PERFORMANCE
-- =======================================================

-- Users table indexes
CREATE INDEX idx_users_telegram_chat_id ON users(telegram_chat_id);
CREATE INDEX idx_users_paystack_customer_code ON users(paystack_customer_code);

-- Virtual accounts indexes
CREATE INDEX idx_virtual_accounts_user_id ON virtual_accounts(user_id);
CREATE INDEX idx_virtual_accounts_telegram_chat_id ON virtual_accounts(telegram_chat_id);
CREATE INDEX idx_virtual_accounts_account_number ON virtual_accounts(account_number);

-- Bank transactions indexes
CREATE INDEX idx_bank_transactions_user_id ON bank_transactions(user_id);
CREATE INDEX idx_bank_transactions_reference ON bank_transactions(reference);
CREATE INDEX idx_bank_transactions_status ON bank_transactions(status);

-- Transfer recipients indexes
CREATE INDEX idx_transfer_recipients_user_id ON transfer_recipients(user_id);

-- Beneficiaries indexes
CREATE INDEX idx_beneficiaries_user_id ON beneficiaries(user_id);

-- Webhook logs indexes
CREATE INDEX idx_webhook_logs_event_type ON paystack_webhook_logs(event_type);
CREATE INDEX idx_webhook_logs_reference ON paystack_webhook_logs(reference);

-- User settings indexes
CREATE INDEX idx_user_settings_user_id ON user_settings(user_id);

-- =======================================================
-- INSERT TEST USER (OPTIONAL)
-- =======================================================

-- Insert a test user for testing
INSERT INTO users (telegram_chat_id, phone_number, full_name, email, balance) 
VALUES ('test_user_123', '+2348123456789', 'Test User', 'test@sofi.ai', 0.00)
ON CONFLICT (telegram_chat_id) DO NOTHING;

-- =======================================================
-- SUMMARY
-- =======================================================
-- âœ… Tables Created Successfully:
-- 1. users - Main user information with balance
-- 2. virtual_accounts - Paystack dedicated accounts  
-- 3. bank_transactions - All payment transactions
-- 4. transfer_recipients - Recipients for outgoing transfers
-- 5. beneficiaries - Saved recipients for users
-- 6. paystack_webhook_logs - Webhook event logging
-- 7. user_settings - User preferences
-- 
-- ðŸš€ Your Paystack integration database is ready!
-- Now you can test account creation without errors.
