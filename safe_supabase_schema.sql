-- =======================================================
-- SOFI AI - SAFE SUPABASE SCHEMA FOR PAYSTACK
-- =======================================================
-- Run these SQL commands in your Supabase SQL Editor
-- This version avoids foreign key constraint issues

-- 1. Drop existing tables if needed (uncomment if you want fresh start)
-- =======================================================
-- DROP TABLE IF EXISTS paystack_webhook_logs CASCADE;
-- DROP TABLE IF EXISTS user_settings CASCADE;
-- DROP TABLE IF EXISTS beneficiaries CASCADE;
-- DROP TABLE IF EXISTS transfer_recipients CASCADE;
-- DROP TABLE IF EXISTS bank_transactions CASCADE;
-- DROP TABLE IF EXISTS virtual_accounts CASCADE;
-- DROP TABLE IF EXISTS users CASCADE;

-- 2. USERS TABLE (Main user information with Paystack integration)
-- =======================================================
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    whatsapp_number TEXT UNIQUE NOT NULL,
    phone_number TEXT,
    full_name TEXT,
    email TEXT,
    
    -- Paystack Integration Columns (Recommended)
    paystack_customer_code TEXT,        -- From customer.code after creation
    paystack_dva_id TEXT,              -- From dedicated_account.id
    paystack_account_number TEXT,       -- Assigned account number
    paystack_bank_name TEXT,           -- e.g. Wema, Providus
    wallet_balance NUMERIC(15,2) DEFAULT 0.00,  -- Your internal wallet balance
    
    -- User Status & Security
    is_verified BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    pin_hash TEXT,
    pin_attempts INTEGER DEFAULT 0,
    pin_locked_until TIMESTAMP,
    
    -- Timestamps
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 3. VIRTUAL ACCOUNTS TABLE (Paystack dedicated accounts)
-- =======================================================
CREATE TABLE IF NOT EXISTS virtual_accounts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    whatsapp_number TEXT NOT NULL, -- Store chat_id, will link manually
    account_number TEXT UNIQUE NOT NULL,
    account_name TEXT,
    bank_name TEXT,
    bank_code TEXT,
    paystack_customer_code TEXT,
    paystack_account_id TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 4. BANK TRANSACTIONS TABLE (All payment transactions)
-- =======================================================
CREATE TABLE IF NOT EXISTS bank_transactions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- whatsapp_number
    transaction_type TEXT NOT NULL,
    amount NUMERIC(15,2) NOT NULL,
    reference TEXT UNIQUE,
    status TEXT DEFAULT 'pending',
    description TEXT,
    paystack_data JSONB,
    wallet_balance_before NUMERIC(15,2),  -- Balance before transaction
    wallet_balance_after NUMERIC(15,2),   -- Balance after transaction
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 5. TRANSFER RECIPIENTS TABLE (For outgoing transfers)
-- =======================================================
CREATE TABLE IF NOT EXISTS transfer_recipients (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- whatsapp_number
    recipient_name TEXT NOT NULL,
    account_number TEXT NOT NULL,
    bank_code TEXT NOT NULL,
    bank_name TEXT,
    paystack_recipient_code TEXT UNIQUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 6. BENEFICIARIES TABLE (Saved recipients for users)
-- =======================================================
CREATE TABLE IF NOT EXISTS beneficiaries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT NOT NULL, -- whatsapp_number
    beneficiary_name TEXT NOT NULL,
    account_number TEXT NOT NULL,
    bank_code TEXT NOT NULL,
    bank_name TEXT NOT NULL,
    nickname TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 7. PAYSTACK WEBHOOKS LOG (For debugging webhook events)
-- =======================================================
CREATE TABLE IF NOT EXISTS paystack_webhook_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_type TEXT NOT NULL,
    reference TEXT,
    payload JSONB NOT NULL,
    signature TEXT,
    processed BOOLEAN DEFAULT FALSE,
    processing_result JSONB,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 8. USER SETTINGS TABLE (User preferences and configurations)
-- =======================================================
CREATE TABLE IF NOT EXISTS user_settings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id TEXT UNIQUE NOT NULL, -- whatsapp_number
    transfer_limit_daily NUMERIC(15,2) DEFAULT 1000000.00, -- 1M NGN default
    transfer_limit_monthly NUMERIC(15,2) DEFAULT 10000000.00, -- 10M NGN default
    require_pin_for_transfers BOOLEAN DEFAULT TRUE,
    notifications_enabled BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- =======================================================
-- ADD MISSING COLUMNS TO EXISTING USERS TABLE (if needed)
-- =======================================================
-- Add Paystack columns if they don't exist
ALTER TABLE users ADD COLUMN IF NOT EXISTS paystack_customer_code TEXT;
ALTER TABLE users ADD COLUMN IF NOT EXISTS paystack_dva_id TEXT;
ALTER TABLE users ADD COLUMN IF NOT EXISTS paystack_account_number TEXT;
ALTER TABLE users ADD COLUMN IF NOT EXISTS paystack_bank_name TEXT;
ALTER TABLE users ADD COLUMN IF NOT EXISTS wallet_balance NUMERIC(15,2) DEFAULT 0.00;
ALTER TABLE users ADD COLUMN IF NOT EXISTS pin_hash TEXT;
ALTER TABLE users ADD COLUMN IF NOT EXISTS pin_attempts INTEGER DEFAULT 0;
ALTER TABLE users ADD COLUMN IF NOT EXISTS pin_locked_until TIMESTAMP;

-- =======================================================
-- BASIC INDEXES FOR PERFORMANCE
-- =======================================================

-- Users table indexes
CREATE INDEX IF NOT EXISTS idx_users_whatsapp_number ON users(whatsapp_number);
CREATE INDEX IF NOT EXISTS idx_users_paystack_customer_code ON users(paystack_customer_code);
CREATE INDEX IF NOT EXISTS idx_users_paystack_dva_id ON users(paystack_dva_id);
CREATE INDEX IF NOT EXISTS idx_users_paystack_account_number ON users(paystack_account_number);

-- Virtual accounts indexes
CREATE INDEX IF NOT EXISTS idx_virtual_accounts_whatsapp_number ON virtual_accounts(whatsapp_number);
CREATE INDEX IF NOT EXISTS idx_virtual_accounts_account_number ON virtual_accounts(account_number);

-- Bank transactions indexes
CREATE INDEX IF NOT EXISTS idx_bank_transactions_user_id ON bank_transactions(user_id);
CREATE INDEX IF NOT EXISTS idx_bank_transactions_reference ON bank_transactions(reference);
CREATE INDEX IF NOT EXISTS idx_bank_transactions_status ON bank_transactions(status);

-- Transfer recipients indexes
CREATE INDEX IF NOT EXISTS idx_transfer_recipients_user_id ON transfer_recipients(user_id);

-- Beneficiaries indexes
CREATE INDEX IF NOT EXISTS idx_beneficiaries_user_id ON beneficiaries(user_id);

-- Webhook logs indexes
CREATE INDEX IF NOT EXISTS idx_webhook_logs_event_type ON paystack_webhook_logs(event_type);
CREATE INDEX IF NOT EXISTS idx_webhook_logs_reference ON paystack_webhook_logs(reference);

-- User settings indexes
CREATE INDEX IF NOT EXISTS idx_user_settings_user_id ON user_settings(user_id);

-- =======================================================
-- INSERT TEST USER FOR IMMEDIATE TESTING
-- =======================================================
INSERT INTO users (whatsapp_number, phone_number, full_name, email, wallet_balance) 
VALUES ('test_user_123', '+2348123456789', 'Test User', 'test@sofi.ai', 0.00)
ON CONFLICT (whatsapp_number) DO NOTHING;

-- =======================================================
-- SUMMARY
-- =======================================================
-- âœ… Tables Created Successfully:
-- 1. users - Main user information with all Paystack columns
-- 2. virtual_accounts - Paystack dedicated accounts  
-- 3. bank_transactions - All payment transactions
-- 4. transfer_recipients - Recipients for outgoing transfers
-- 5. beneficiaries - Saved recipients for users
-- 6. paystack_webhook_logs - Webhook event logging
-- 7. user_settings - User preferences
-- 
-- âœ… Features:
-- - All recommended Paystack integration columns
-- - Safe column addition (ADD COLUMN IF NOT EXISTS)
-- - No problematic foreign key constraints
-- - Performance indexes on key lookup columns
-- - Test user created for immediate testing
-- 
-- ðŸš€ Database is ready for Paystack integration testing!
